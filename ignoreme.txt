
# Terraform oracle provider
- 1.Get tenancy_ocid = ""
- 2.Get user ocid = "" 
- 3.1 Generate an api signing key: https://docs.oracle.com/en-us/iaas/Content/API/Concepts/apisigningkey.htm#two
  openssl genrsa -out private_key.pem -aes128 2048
  chmod go-rwx private_key.pem
  openssl rsa -pubout -in private_key.pem -out public_key.pem

    When you upload your public key to the identity control plane, you get a key ID in return:
    The key format is tenantId/userId/fingerprint.
    Or we can generate again: 

export AWS_ACCESS_KEY_ID=
export AWS_SECRET_ACCESS_KEY=

### Contents
[Provision EKS cluster using Terraform](#1.create-a-new-kubernetes-cluster-in-aws)

[Deploy portworx operator on EKS cluster](https://github.com/huynhminhchu/portwork-project#deploy-px)

[Create your first PVC](https://github.com/huynhminhchu/portwork-project#use-px)

[Clean up resources](https://github.com/huynhminhchu/portwork-project#cleanup)

** OPTIONAL **: 
- Edit configmap aws-auth to make EKS cluster infos visible in the UI:  
    
      kubectl edit configmap aws-auth -n kube-system
    <!-- tsk -->
      mapUsers: |
        - userarn: arn:aws:iam::[account_id]:root
          groups:
          - system:masters
